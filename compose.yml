services:
  caddy:
    image: caddy:2.8-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - TZ=Asia/Seoul
      - CADDY_EMAIL=${CADDY_EMAIL}
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy-data:/data
  back:
    container_name: back
    image: homepage-back-r2:latest
    ports:
      - "8080:8080"
    environment:
      # Spring Boot 기본 프로파일 (필요 시 .env나 환경변수로 오버라이드)
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-prod}
      - JAVA_OPTS=${JAVA_OPTS:-}
      # (중요) DataSource 명시: prod 프로파일에서 DB 설정이 없으면 부팅 실패
      # - 아래 값들은 .env의 MySQL 설정과 동일하게 맞춥니다.
      - SPRING_DATASOURCE_URL=jdbc:p6spy:mysql://${MYSQL_HOST}:3306/${MYSQL_DATABASE:-keeper}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&useUnicode=true&characterEncoding=UTF-8
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      # 드라이버 클래스를 명시적으로 지정하여 "suitable driver class" 오류 방지
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=${SPRING_DATASOURCE_DRIVER_CLASS_NAME:-com.p6spy.engine.spy.P6SpyDriver}
      - SPRING_DATA_REDIS_HOST=${REDIS_HOST}
      - SPRING_DATA_REDIS_PORT=${REDIS_PORT}

      - SPRING_JWT_SECRET=${SPRING_JWT_SECRET}
      - SPRING_MAIL_HOST=${MAIL_HOST}
      - SPRING_MAIL_PORT=${MAIL_PORT}
      - SPRING_MAIL_USERNAME=${MAIL_USERNAME}
      - SPRING_MAIL_PASSWORD=${MAIL_PASSWORD}
      
    # volumes:
      # 외부 설정(application.yml 등) 바인드 마운트
      # - ./application.yml:/app/config/application.yml:ro
      # 필요 시 배포용 별도 설정도 함께 마운트
      # - ./config/application-deploy.yml:/app/config/application-deploy.yml:ro
    depends_on:
      - db
      - redis

  front:
    container_name: front
    ports:
      - "3000:3000"
    image: homepage-front-r2:latest
  db:
    image: mysql:8.0
    container_name: db
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-keeper}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: Asia/Seoul
    volumes:
      - ./keeper_db_init.sql:/docker-entrypoint-initdb.d/db-init.sql:ro
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
  redis:
    container_name: redis
    image: redis:7-alpine3.17
    ports:
      - 6379:6379

volumes:
  caddy-data:
